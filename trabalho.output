Terminals unused in grammar

   IF
   IN
   WHILE
   THEN
   ELSE
   DO
   END
   INTEGER
   NEWLINE


Grammar

    0 $accept: input $end

    1 input: line

    2 line: explist
    3     | explist println
    4     | println
    5     | %empty

    6 println: PRINTLN '(' rprint

    7 rprint: STRING ',' rprint
    8       | explist ',' rprint
    9       | print

   10 print: STRING ')' line
   11      | explist ')' line

   12 explist: exp
   13        | explist exp

   14 exp: NUMBER
   15    | FLOAT
   16    | BOOLEAN
   17    | IDENTIFIER
   18    | IDENTIFIER ASSGNOP exp
   19    | exp '+' exp
   20    | exp '-' exp
   21    | exp '*' exp
   22    | exp '/' exp
   23    | exp EQUALS exp
   24    | exp DIFFER exp
   25    | exp LT exp
   26    | exp GT exp
   27    | exp LET exp
   28    | exp GET exp
   29    | NOT BOOLEAN
   30    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 30
')' (41) 10 11 30
'*' (42) 21
'+' (43) 19
',' (44) 7 8
'-' (45) 20
'/' (47) 22
error (256)
NUMBER (258) 14
FLOAT (259) 15
BOOLEAN (260) 16 29
IDENTIFIER (261) 17 18
STRING (262) 7 10
IF (263)
IN (264)
WHILE (265)
THEN (266)
ELSE (267)
DO (268)
END (269)
INTEGER (270)
ASSGNOP (271) 18
PRINTLN (272) 6
NEWLINE (273)
EQUALS (274) 23
DIFFER (275) 24
LT (276) 25
GT (277) 26
LET (278) 27
GET (279) 28
NOT (280) 29


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
input (34)
    on left: 1, on right: 0
line (35)
    on left: 2 3 4 5, on right: 1 10 11
println (36)
    on left: 6, on right: 3 4
rprint (37)
    on left: 7 8 9, on right: 6 7 8
print (38)
    on left: 10 11, on right: 9
explist (39)
    on left: 12 13, on right: 2 3 8 11 13
exp (40)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30, on right:
    12 13 18 19 20 21 22 23 24 25 26 27 28 30


State 0

    0 $accept: . input $end

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    PRINTLN     shift, and go to state 5
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    $default  reduce using rule 5 (line)

    input    go to state 8
    line     go to state 9
    println  go to state 10
    explist  go to state 11
    exp      go to state 12


State 1

   14 exp: NUMBER .

    $default  reduce using rule 14 (exp)


State 2

   15 exp: FLOAT .

    $default  reduce using rule 15 (exp)


State 3

   16 exp: BOOLEAN .

    $default  reduce using rule 16 (exp)


State 4

   17 exp: IDENTIFIER .
   18    | IDENTIFIER . ASSGNOP exp

    ASSGNOP  shift, and go to state 13

    $default  reduce using rule 17 (exp)


State 5

    6 println: PRINTLN . '(' rprint

    '('  shift, and go to state 14


State 6

   29 exp: NOT . BOOLEAN

    BOOLEAN  shift, and go to state 15


State 7

   30 exp: '(' . exp ')'

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 16


State 8

    0 $accept: input . $end

    $end  shift, and go to state 17


State 9

    1 input: line .

    $default  reduce using rule 1 (input)


State 10

    4 line: println .

    $default  reduce using rule 4 (line)


State 11

    2 line: explist .
    3     | explist . println
   13 explist: explist . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    PRINTLN     shift, and go to state 5
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    $default  reduce using rule 2 (line)

    println  go to state 18
    exp      go to state 19


State 12

   12 explist: exp .
   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp

    EQUALS  shift, and go to state 20
    DIFFER  shift, and go to state 21
    LT      shift, and go to state 22
    GT      shift, and go to state 23
    LET     shift, and go to state 24
    GET     shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '*'     shift, and go to state 28
    '/'     shift, and go to state 29

    $default  reduce using rule 12 (explist)


State 13

   18 exp: IDENTIFIER ASSGNOP . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 30


State 14

    6 println: PRINTLN '(' . rprint

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 31
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    rprint   go to state 32
    print    go to state 33
    explist  go to state 34
    exp      go to state 12


State 15

   29 exp: NOT BOOLEAN .

    $default  reduce using rule 29 (exp)


State 16

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp
   30    | '(' exp . ')'

    EQUALS  shift, and go to state 20
    DIFFER  shift, and go to state 21
    LT      shift, and go to state 22
    GT      shift, and go to state 23
    LET     shift, and go to state 24
    GET     shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '*'     shift, and go to state 28
    '/'     shift, and go to state 29
    ')'     shift, and go to state 35


State 17

    0 $accept: input $end .

    $default  accept


State 18

    3 line: explist println .

    $default  reduce using rule 3 (line)


State 19

   13 explist: explist exp .
   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp

    EQUALS  shift, and go to state 20
    DIFFER  shift, and go to state 21
    LT      shift, and go to state 22
    GT      shift, and go to state 23
    LET     shift, and go to state 24
    GET     shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '*'     shift, and go to state 28
    '/'     shift, and go to state 29

    $default  reduce using rule 13 (explist)


State 20

   23 exp: exp EQUALS . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 36


State 21

   24 exp: exp DIFFER . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 37


State 22

   25 exp: exp LT . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 38


State 23

   26 exp: exp GT . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 39


State 24

   27 exp: exp LET . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 40


State 25

   28 exp: exp GET . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 41


State 26

   19 exp: exp '+' . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 42


State 27

   20 exp: exp '-' . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 43


State 28

   21 exp: exp '*' . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 44


State 29

   22 exp: exp '/' . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    exp  go to state 45


State 30

   18 exp: IDENTIFIER ASSGNOP exp .
   19    | exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 18 (exp)


State 31

    7 rprint: STRING . ',' rprint
   10 print: STRING . ')' line

    ','  shift, and go to state 46
    ')'  shift, and go to state 47


State 32

    6 println: PRINTLN '(' rprint .

    $default  reduce using rule 6 (println)


State 33

    9 rprint: print .

    $default  reduce using rule 9 (rprint)


State 34

    8 rprint: explist . ',' rprint
   11 print: explist . ')' line
   13 explist: explist . exp

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    NOT         shift, and go to state 6
    '('         shift, and go to state 7
    ','         shift, and go to state 48
    ')'         shift, and go to state 49

    exp  go to state 19


State 35

   30 exp: '(' exp ')' .

    $default  reduce using rule 30 (exp)


State 36

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   23    | exp EQUALS exp .
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp

    LT   shift, and go to state 22
    GT   shift, and go to state 23
    LET  shift, and go to state 24
    GET  shift, and go to state 25
    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 23 (exp)


State 37

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   24    | exp DIFFER exp .
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp

    LT   shift, and go to state 22
    GT   shift, and go to state 23
    LET  shift, and go to state 24
    GET  shift, and go to state 25
    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 24 (exp)


State 38

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   25    | exp LT exp .
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 25 (exp)


State 39

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   26    | exp GT exp .
   27    | exp . LET exp
   28    | exp . GET exp

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 26 (exp)


State 40

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   27    | exp LET exp .
   28    | exp . GET exp

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 27 (exp)


State 41

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp
   28    | exp GET exp .

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 28 (exp)


State 42

   19 exp: exp . '+' exp
   19    | exp '+' exp .
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp

    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 19 (exp)


State 43

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   20    | exp '-' exp .
   21    | exp . '*' exp
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp

    '*'  shift, and go to state 28
    '/'  shift, and go to state 29

    $default  reduce using rule 20 (exp)


State 44

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   21    | exp '*' exp .
   22    | exp . '/' exp
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp

    $default  reduce using rule 21 (exp)


State 45

   19 exp: exp . '+' exp
   20    | exp . '-' exp
   21    | exp . '*' exp
   22    | exp . '/' exp
   22    | exp '/' exp .
   23    | exp . EQUALS exp
   24    | exp . DIFFER exp
   25    | exp . LT exp
   26    | exp . GT exp
   27    | exp . LET exp
   28    | exp . GET exp

    $default  reduce using rule 22 (exp)


State 46

    7 rprint: STRING ',' . rprint

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 31
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    rprint   go to state 50
    print    go to state 33
    explist  go to state 34
    exp      go to state 12


State 47

   10 print: STRING ')' . line

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    PRINTLN     shift, and go to state 5
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    $default  reduce using rule 5 (line)

    line     go to state 51
    println  go to state 10
    explist  go to state 11
    exp      go to state 12


State 48

    8 rprint: explist ',' . rprint

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    STRING      shift, and go to state 31
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    rprint   go to state 52
    print    go to state 33
    explist  go to state 34
    exp      go to state 12


State 49

   11 print: explist ')' . line

    NUMBER      shift, and go to state 1
    FLOAT       shift, and go to state 2
    BOOLEAN     shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    PRINTLN     shift, and go to state 5
    NOT         shift, and go to state 6
    '('         shift, and go to state 7

    $default  reduce using rule 5 (line)

    line     go to state 53
    println  go to state 10
    explist  go to state 11
    exp      go to state 12


State 50

    7 rprint: STRING ',' rprint .

    $default  reduce using rule 7 (rprint)


State 51

   10 print: STRING ')' line .

    $default  reduce using rule 10 (print)


State 52

    8 rprint: explist ',' rprint .

    $default  reduce using rule 8 (rprint)


State 53

   11 print: explist ')' line .

    $default  reduce using rule 11 (print)
